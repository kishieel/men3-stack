/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/health/liveness": {
    get: operations["HealthController_checkLiveness"];
  };
  "/api/health/readiness": {
    get: operations["HealthController_checkReadiness"];
  };
  "/api/users": {
    /**
     * Get all users
     * @description Returns a list of all users
     */
    get: operations["UsersController_getUsers"];
    /**
     * Create user
     * @description Creates a new user
     */
    post: operations["UsersController_createUser"];
  };
  "/api/users/{id}": {
    /**
     * Get user by ID
     * @description Returns a user by ID
     */
    get: operations["UsersController_getUserById"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UserResource: {
      /** @example clxjgse7g00000cl3hqald3sx */
      id: string;
      /** @example john.doe@example.com */
      username: string;
      /**
       * Format: date-time
       * @example 2021-08-01T00:00:00.000Z
       */
      createdAt: string;
      /**
       * Format: date-time
       * @example 2021-08-01T00:00:00.000Z
       */
      updatedAt: string;
    };
    UsersCollection: {
      data: components["schemas"]["UserResource"][];
    };
    ExceptionResource: {
      /** @example 404 */
      statusCode: number;
      /** @example Not Found */
      error: string;
      /** @example User not found */
      message: string | null;
    };
    CreateUserRequest: {
      username: string;
      password: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  HealthController_checkLiveness: {
    responses: {
      /** @description The Health Check is successful */
      200: {
        content: {
          "application/json": {
            /** @example ok */
            status?: string;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            info?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            } | null;
            /** @example {} */
            error?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            } | null;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            details?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            };
          };
        };
      };
      /** @description The Health Check is not successful */
      503: {
        content: {
          "application/json": {
            /** @example error */
            status?: string;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            info?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            } | null;
            /**
             * @example {
             *   "redis": {
             *     "status": "down",
             *     "message": "Could not connect"
             *   }
             * }
             */
            error?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            } | null;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   },
             *   "redis": {
             *     "status": "down",
             *     "message": "Could not connect"
             *   }
             * }
             */
            details?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            };
          };
        };
      };
    };
  };
  HealthController_checkReadiness: {
    responses: {
      /** @description The Health Check is successful */
      200: {
        content: {
          "application/json": {
            /** @example ok */
            status?: string;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            info?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            } | null;
            /** @example {} */
            error?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            } | null;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            details?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            };
          };
        };
      };
      /** @description The Health Check is not successful */
      503: {
        content: {
          "application/json": {
            /** @example error */
            status?: string;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   }
             * }
             */
            info?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            } | null;
            /**
             * @example {
             *   "redis": {
             *     "status": "down",
             *     "message": "Could not connect"
             *   }
             * }
             */
            error?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            } | null;
            /**
             * @example {
             *   "database": {
             *     "status": "up"
             *   },
             *   "redis": {
             *     "status": "down",
             *     "message": "Could not connect"
             *   }
             * }
             */
            details?: {
              [key: string]: {
                status: string;
                [key: string]: unknown;
              };
            };
          };
        };
      };
    };
  };
  /**
   * Get all users
   * @description Returns a list of all users
   */
  UsersController_getUsers: {
    responses: {
      /** @description List of users */
      200: {
        content: {
          "application/json": components["schemas"]["UsersCollection"];
        };
      };
      /** @description Internal server error */
      500: {
        content: never;
      };
    };
  };
  /**
   * Create user
   * @description Creates a new user
   */
  UsersController_createUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserRequest"];
      };
    };
    responses: {
      /** @description User */
      200: {
        content: {
          "application/json": components["schemas"]["UserResource"];
        };
      };
      /** @description Username already exists */
      400: {
        content: {
          "application/json": components["schemas"]["ExceptionResource"];
        };
      };
      /** @description Internal server error */
      500: {
        content: never;
      };
    };
  };
  /**
   * Get user by ID
   * @description Returns a user by ID
   */
  UsersController_getUserById: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description User */
      200: {
        content: {
          "application/json": components["schemas"]["UserResource"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["ExceptionResource"];
        };
      };
      /** @description Internal server error */
      500: {
        content: never;
      };
    };
  };
}
