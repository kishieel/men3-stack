name: Deploy application
description: Deploy application to AWS

inputs:
  aws_region:
    description: 'AWS region'
    required: true
  aws_access_key:
    description: 'AWS access key'
    required: true
  aws_secret_key:
    description: 'AWS secret key'
    required: true
  terraform_backend:
    description: 'Terraform backend configuration'
    required: true
  terraform_vars:
    description: 'Terraform variables'
    required: true
  terraform_public_vars:
    description: 'Terraform public variables'
    required: true
  app_backend_image:
    description: 'Backend Docker image'
    required: true
  app_frontend_image:
    description: 'Frontend Docker image'
    required: true

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: AWS CLI setup
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws_access_key }}
        aws-secret-access-key: ${{ inputs.aws_secret_key }}
        aws-region: ${{ inputs.aws_region }}
    - name: Terraform setup
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ">=1"
    - name: Terraform init
      working-directory: deployment/production
      shell: bash
      run: |
        echo '${{ inputs.terraform_backend }}' > backend.hcl
        terraform init -backend-config=backend.hcl
    - name: Terraform apply
      working-directory: deployment/production
      shell: bash
      run: |
        echo '${{ inputs.terraform_vars }}' >> 10_defaults.auto.tfvars
        echo 'app_backend_image = "${{ inputs.app_backend_image }}"' >> 20_backend.auto.tfvars
        echo 'app_frontend_image = "${{ inputs.app_frontend_image }}"' >> 20_frontend.auto.tfvars
        terraform apply -auto-approve
