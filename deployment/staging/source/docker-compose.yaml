services:
  nginx:
    image: "nginx:latest"
    restart: "unless-stopped"
    environment:
      DOMAIN_NAME: "${DOMAIN_NAME}"
    ports:
      - "${FORWARD_NGINX_PORT:-80}:80"
      - "${FORWARD_NGINX_PORT_SSL:-443}:443"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost/.well-known/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "${AWS_REGION:-eu-central-1}"
        awslogs-group: "/aws/ec2/nginx"
    volumes:
      - "./nginx/templates:/etc/nginx/templates:ro"
      - "./letsencrypt:/etc/letsencrypt:ro"
    depends_on:
      nestjs:
        condition: service_healthy
      nextjs:
        condition: service_healthy
    networks:
      - "default"

  nestjs:
    image: "ghcr.io/kishieel/men3-stack-backend:${NEST_VERSION:-latest}"
    restart: "unless-stopped"
    environment:
      DATABASE_URL: "${NEST_DATABASE_URL:-mysql://root:root@mysql:3306/app}"
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health/readiness" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "${AWS_REGION:-eu-central-1}"
        awslogs-group: "/aws/ec2/backend"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - "default"

  nextjs:
    image: "ghcr.io/kishieel/men3-stack-frontend:${NEXT_VERSION:-latest}"
    restart: "unless-stopped"
    environment:
      NEXT_PUBLIC_API_URL: "???"
      NEXT_PRIVATE_API_URL: "???"
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "${AWS_REGION:-eu-central-1}"
        awslogs-group: "/aws/ec2/frontend"
    networks:
      - "default"

  mysql:
    image: "mysql:8.3"
    restart: "unless-stopped"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "app"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "awslogs"
      options:
        awslogs-region: "${AWS_REGION:-eu-central-1}"
        awslogs-group: "/aws/ec2/database"
    volumes:
      - "mysql-data:/var/lib/mysql"
    networks:
      - "default"

  autoheal:
    image: "willfarrell/autoheal"
    restart: "unless-stopped"
    tty: true
    environment:
      AUTOHEAL_INTERVAL: "5"
      AUTOHEAL_START_PERIOD: "30"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - "default"

networks:
  default:
    driver: bridge

volumes:
  mysql-data:
    driver: local
